{"version":3,"file":"static/js/9699.9fd95b45.chunk.js","mappings":"8PAMA,MAAMA,GAASC,EAAAA,EAAAA,SAAOC,EAAAA,EAAOC,QAAM,Y,oIAAsB;;;;;;;;sBAQnC,EAAGC,WAAYA,EAAMC;;YAE/B,EAAGC,YAAaA,GAAU;;EAGhCC,GAASN,EAAAA,EAAAA,SAAOC,EAAAA,EAAOM,KAAG,Y,oIAAC;;;;;;EAO3BC,EAAQR,EAAAA,QAAOS,KAAI,Y,mIAAA;WACbC,GAAUA,EAAMC;;;;;;;;;;EActBC,GAAUZ,EAAAA,EAAAA,SAAOC,EAAAA,EAAOM,KAAG,Y,qIAA6B;;;;aAIhDG,GAAUA,EAAMG;EAWvB,SAASC,EAAWJ,GA2BzB,OACE,SAACX,EAAAA,CAAOgB,WAAY,CAAEC,cAAe,GAAKX,OAAQK,EAAML,O,UACtD,UAACC,EAAAA,CAAOW,SA5BK,CACfC,OAAQ,CACNC,EAAG,GAELC,MAAO,CACLD,GAAI,K,WAwBF,SAACP,EAAAA,CAAQC,QAAS,EAAGI,SArBX,CACdC,OAAQ,CACNL,QAAS,GAEXO,MAAO,CACLP,QAAS,I,SAiBJH,EAAMW,QAET,SAACb,EAAAA,CAAMG,MAAOD,EAAMC,M,SAAQD,EAAMY,SAClC,SAACV,EAAAA,CAAQC,QAAS,EAAGI,SAhBT,CAChBC,OAAQ,CACNL,QAAS,GAEXO,MAAO,CACLP,QAAS,I,UAYL,SAACU,EAAAA,EAAGA,CAACC,MAAM,MAAMC,SAAS,U,UACxB,SAACC,EAAAA,GAAUA,CAACC,KAAK,OAAOC,KAAMlB,EAAMC,gBAMhD,C,cC5EA,MAAMkB,GAAY5B,EAAAA,EAAAA,IAAOD,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,0IAAgC;;;;;YAKtDb,GAAUA,EAAMoB,QAAU;sBAChBpB,I,IAA8BA,EAA8BA,E,OAAjDA,EAAMqB,WAAkC,QAArBrB,EAAAA,EAAMsB,uBAANtB,IAAAA,OAAAA,EAAAA,EAAuBuB,KAA4B,QAArBvB,EAAAA,EAAMsB,uBAANtB,IAAAA,OAAAA,EAAAA,EAAuBwB,KAAK;;;;cAIhGxB,GAAUA,EAAMoB,QAAU;kBACtBpB,GAAUA,EAAMyB,WAAa;;;;kBAI7BzB,GAAUA,EAAMyB,WAAa;;GAI1CC,EAAQpC,EAAAA,QAAOO,IAAG,Y,sIAAiC;;;;;;IAMrD,EAAG8B,uBACHA,EACIC,EAAAA,GAAG;;;UAIH;;;;;;;;;;;EAYFC,EAAQvC,EAAAA,QAAOO,IAAG,Y,sIAAA;WACZG,GAAUA,EAAMC;;;;;;;;;;;;;;;;;EAkBb,SAAS6B,EAAc9B,GACpC,MAAM,WAAEqB,EAAU,gBAAEC,EAAe,OAAEF,EAAM,UAAEW,EAAS,UAAEN,EAAS,kBAAEE,EAAiB,KAAEK,EAAI,GAAEC,GAAOjC,EAC7FkC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAChB,EAAAA,CACCiB,QAAQ,UACRC,WAAW,QACXhB,WAAYA,EACZC,gBAAiBA,EACjBF,OAAQA,EACRK,UAAWA,EACXa,GAAG,IACHN,KAAMA,EACNO,OAAO,SACPC,IAAI,sBACJC,QAjBgB,KACdR,GACFC,EAASD,EACX,KAeMjC,E,WAEJ,UAAC0B,EAAAA,CAAMC,kBAAmBA,E,UACvB3B,EAAMR,QACP,SAACqC,EAAAA,CAAM5B,MAAO8B,E,SAAY/B,EAAM0C,eAEjC1C,EAAM2C,WAGb,CCzGA,MAAMC,EAAWtD,EAAAA,QAAOO,IAAG,Y,6IAAA;;;;;;;;;;;;;;;;;;EAyBrBgD,EAAU,UAET,SAASC,EAAkB9C,GAChC,MAAM,KAAE+C,EAAI,cAAEC,IAAkBC,EAAAA,EAAAA,SAAQ,CACtCC,IAAK,yBACLC,SAAU,MACVC,cAAe,YACfC,OAAQ,IAAIC,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAIC,QAASC,UAAWC,EAAAA,UAAUC,gBAGxDC,GAAeC,EAAAA,EAAAA,MACfC,EAAgBF,EAAa,GAC7BG,EAAiBH,EAAa,GAEpC,OACE,SAAC/B,EAAaA,CACZV,OAAQ2C,EAAgB,QAAU,QAClC/B,KAAK,4BACLV,gBAAiB,CAAEC,KAAM,2BAA4BC,MAAO,4BAC5DH,WAAYrB,EAAMqB,WAClBU,UAAWc,EACXrD,QACE,SAACY,EAAUA,CAACH,MAAO4C,EAASjC,MAAOqD,EAAAA,CAAC,iBAAkBtD,MAAM,SAACuD,EAAAA,GAAYA,CAACjD,KAAK,OAAOC,KAAM2B,MAE9FH,UAAWuB,EAAAA,CAAC,4DACZE,aAAcH,EAAiB,MAAQ,KACvCrC,mBAAiB,E,UAEjB,SAACiB,EAAAA,C,UACC,SAACI,EAAAA,CAAcoB,aAAc,IAAMrB,GAAQA,EAAKsB,YAIxD,C,eC1DA,MAAMzB,EAAWtD,EAAAA,QAAOO,IAAG,Y,8IAAA;;;;;;;;;;;EAapB,SAASyE,IACd,MAAM7E,GAAQ8E,EAAAA,EAAAA,YACRlD,GAAamD,EAAAA,EAAAA,OAEXzB,KAAM0B,EAAgBzB,cAAe0B,IAAmBzB,EAAAA,EAAAA,SAAQ,CACtEC,IAAK,yBACLC,SAAU,eACVC,cAAe,YACfC,OAAQ,IAAIC,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAIC,QAASC,UAAWC,EAAAA,UAAUgB,kBAGtD5B,KAAM6B,EAAe5B,cAAe6B,IAAkB5B,EAAAA,EAAAA,SAAQ,CACpEC,IAAK,yBACLC,SAAU,cACVC,cAAe,YACfC,OAAQ,IAAIC,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAIC,QAASC,UAAWC,EAAAA,UAAUgB,iBAG9D,OACE,SAAC7C,EAAaA,CACZE,KAAK,8BACLP,UAAU,QACVJ,WAAYA,EACZU,UAAWtC,EAAMqF,QACjBxD,gBAAiB,CAAEC,KAAM,4BAA6BC,MAAO,6BAC7DhC,QACE,SAACY,EAAUA,CACTH,MAAOR,EAAMqF,QACblE,MAAOqD,EAAAA,CAAC,iBACRtD,MAAM,SAACoE,EAAAA,GAAMA,CAAC9D,KAAK,OAAOC,KAAMzB,EAAMqF,YAG1CpC,UAAWuB,EAAAA,CAAC,+D,UAEZ,SAACrB,EAAQA,C,SACNvB,GACC,SAACwD,EAAAA,CAAcT,aAAc,K,IAAMQ,E,OAAAA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAeP,MAAM,KAExD,SAACK,EAAAA,CAAeN,aAAc,K,IAAMK,E,OAAAA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgBJ,MAAM,OAKpE,CCxDA,MAAMzB,EAAWtD,EAAAA,QAAOO,IAAG,Y,yIAAA;;;;;;;;;;;;;;;;;;EAwBrBgD,EAAU,UAET,SAASmC,EAAchF,GAC5B,MAAM,KAAE+C,EAAI,cAAEC,IAAkBC,EAAAA,EAAAA,SAAQ,CACtCC,IAAK,yBACLC,SAAU,KACVC,cAAe,YACfC,OAAQ,IAAIC,EAAAA,OAAO,CAAEC,IAAKC,EAAAA,IAAIC,QAASC,UAAWC,EAAAA,UAAUC,gBAGxDC,GAAeC,EAAAA,EAAAA,MACfC,EAAgBF,EAAa,GAC7BG,EAAiBH,EAAa,GAEpC,OACE,SAAC/B,EAAaA,CACZG,GAAG,QACHgD,QAAShB,EAAAA,CAAC,oBACV7C,OAAQ2C,EAAgB,QAAU,QAClC1C,WAAYrB,EAAMqB,WAClBU,UAAWc,EACXvB,gBAAiB,CAAEC,KAAM,2BAA4BC,MAAO,4BAC5DhC,QAAQ,SAACY,EAAUA,CAACH,MAAO4C,EAASjC,MAAOqD,EAAAA,CAAC,YAAatD,MAAM,SAACuE,EAAAA,GAAIA,CAACjE,KAAK,OAAOC,KAAM2B,MACvFH,UAAWuB,EAAAA,CAAC,6EACZE,aAAcH,EAAiB,MAAQ,KACvCrC,mBAAiB,E,UAEjB,SAACiB,EAAQA,C,UACP,SAACI,EAAAA,CAAcoB,aAAc,IAAMrB,GAAQA,EAAKsB,YAIxD,C,uGC7CA,MAAMzB,EAAWtD,EAAAA,QAAOO,IAAG,Y,sIAAA;;;;;;;;;;;;;;;;;;EAoBrBsF,EAAW7F,EAAAA,QAAOO,IAAG,Y,sIAAA;;;;;;;;;;;sBAWL,EAAGJ,WAAYA,EAAMC;;;;;;;;;;;;;;;;wBAgBnB,EAAGD,WAAYA,EAAM2F;;;EAIvCC,EAAY/F,EAAAA,QAAOgG,GAAE,Y,uIAAA;;;;;;;;;;;WAWftF,GAAUA,EAAMC,OAASD,EAAMP,MAAM8F;;;;;;;;;uBAS1B,EAAG9F,WAAYA,EAAM+F,WAAWC;;;EAIjDC,EAAcpG,EAAAA,QAAOgG,GAAE,Y,yIAAA;;;;;;;;WAQjBtF,GAAUA,EAAMC,OAASD,EAAMP,MAAMkG;;;;;;;;;uBAS1B,EAAGlG,WAAYA,EAAM+F,WAAWC;aACzCzF,GAAUA,EAAMC,OAASD,EAAMP,MAAM8F;;EAG7CK,EAAatG,EAAAA,QAAOgG,GAAE,Y,wIAAA;;;;;;;;;WAShBtF,GAAUA,EAAMC,OAASD,EAAMP,MAAM8F;;;;;;;;;EAU3CM,EAAYvG,EAAAA,QAAOgG,GAAE,Y,uIAAA;;;;;;;;;;WAUftF,GAA2B,QAAhBA,EAAMC,MAAkBD,EAAMP,MAAMqG,SAAW9F,EAAMP,MAAMsG;;;;;;;;;;;EAY5EC,GAAiB1G,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,4IAAC;;;;;;;EAc5BgC,EAAU,UAEVoD,EAAoE,CACxE,CACEC,QAASC,EAAAA,QAAQC,QACjBC,QAAS,OAEX,CACEH,QAASC,EAAAA,QAAQG,KACjBD,QAASE,EAAAA,GAAUF,SAErB,CACEH,QAASC,EAAAA,QAAQC,QACjBC,QAASG,EAAAA,GAAIL,EAAAA,QAAQC,SAASC,SAEhC,CACEH,QAASC,EAAAA,QAAQC,QACjBC,QAASI,EAAAA,GAAIJ,UAIjB,SAASK,GAAM,QAAER,EAAO,QAAEG,I,IAOXM,EAICC,EAAAA,EAAAA,EAAAA,EACaA,EAAAA,EAAAA,EAAAA,EAkBPD,EACEA,EA9BtB,MAAME,GAAgB/C,EAAAA,EAAAA,MAAgB,GAChC5B,GAAWC,EAAAA,EAAAA,OACX,gBAAE2E,EAAe,YAAEC,IAAgBC,EAAAA,EAAAA,MACnCL,GAAWM,EAAAA,EAAAA,IAAYZ,EAASH,GAChCU,GAAkBM,EAAAA,EAAAA,KAAmB,CACzCC,UAAW,CACTd,QAASM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUS,QAAQf,QAC3BgB,OAAOC,EAAAA,EAAAA,IAAsB,CAAEpB,eAG7BqB,GAA4B,QAApBX,EAAAA,EAAgBY,YAAhBZ,IAAAA,GAA2B,QAA3BA,EAAAA,EAAsBa,aAAtBb,IAAAA,GAAmC,QAAnCA,EAAAA,EAA6Bc,cAA7Bd,IAAAA,GAA0C,QAA1CA,EAAAA,EAAqCW,aAArCX,IAAAA,OAAAA,EAAAA,EAA4Ce,QAAS,EAC7DC,GAAyC,QAApBhB,EAAAA,EAAgBY,YAAhBZ,IAAAA,GAA2B,QAA3BA,EAAAA,EAAsBa,aAAtBb,IAAAA,GAAmC,QAAnCA,EAAAA,EAA6Bc,cAA7Bd,IAAAA,GAAuD,QAAvDA,EAAAA,EAAqCgB,0BAArChB,IAAAA,OAAAA,EAAAA,EAAyDe,QAAS,EACvFE,GAAcC,EAAAA,EAAAA,cACjBC,IACCA,EAAEC,kBACF9F,GACE+F,EAAAA,EAAAA,IAAmB,CACjB5B,QAAqB,QAAZA,EAAoB6B,EAAAA,GAAkB7B,EAC/CgB,OAAOC,EAAAA,EAAAA,IAAsB,CAAEpB,cACjC,GAGJ,CAACG,EAASH,EAAShE,IAErB,OACE,UAACiD,EAAAA,CAAS1C,QAASoF,E,WACjB,SAACM,EAAAA,EAAaA,CAACC,WAAY,CAACzB,GAAWT,QAASA,EAASjF,KAAM4F,EAAgB,GAAK,MACpF,UAAChG,EAAAA,EAAGA,CAACwH,QAAQ,gBAAgBC,IAAI,O,WAC/B,UAACzH,EAAAA,EAAGA,CAACC,MAAM,OAAOwH,IAAI,MAAMC,MAAM,SAASxH,SAAS,S,WAClD,SAACsE,EAAAA,C,SAAWsB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU6B,QACtB,SAAC9C,EAAAA,C,SAAaiB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU8B,aAE1B,UAAC5H,EAAAA,EAAGA,CAACC,MAAM,OAAOwH,IAAI,MAAMC,MAAM,S,WAChC,SAAC3C,EAAAA,C,SACEkB,EAAgB,CACfS,QACAmB,KAAMC,EAAAA,GAAWC,oBAGrB,UAAC5C,EAAAA,CAAesC,IAAI,MAAMC,MAAM,SAASF,QAAQ,W,WAC/C,SAACQ,EAAAA,GAAUA,CAACC,MAAOlB,KACnB,SAAC/B,EAAAA,CAAU5F,MAAO2H,EAAqB,EAAI,MAAQ,Q,SAAUb,EAAYa,gBAMrF,CAEO,SAASmB,EAAW/I,GACzB,OACE,SAAC8B,EAAaA,CACZG,GAAG,mBACHR,UAAU,QACVJ,WAAYrB,EAAMqB,WAClBU,UAAWc,EACXvB,gBAAiB,CAAEC,KAAM,0BAA2BC,MAAO,2BAC3DhC,QAAQ,SAACY,EAAUA,CAACH,MAAO4C,EAASjC,MAAOqD,EAAAA,CAAC,UAAWtD,MAAM,SAACqI,EAAAA,GAAQA,CAAC/H,KAAK,OAAOC,KAAM2B,MACzFH,UAAWuB,EAAAA,CAAC,iE,UAEZ,SAACrB,EAAQA,C,SACNqD,EAAOgD,KAAKxB,IACX,SAACf,EAAAA,CAAwCR,QAASuB,EAAMvB,QAASG,QAASoB,EAAMpB,SAApE,YAAYoB,EAAMpB,gBAKxC,CC3PA,MAAM6C,EAAgB5J,EAAAA,QAAOO,IAAG,Y,oIAAA;;;;;;;;;;;EAY1BsJ,GAAW7J,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,+HAAC;;;;;;EAOtBuI,GAAa9J,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,iIAAC;;;;;;;EAQvB,SAASwI,KACd,OACE,SAACH,EAAAA,C,UACC,UAACE,EAAAA,CAAWE,UAAU,SAAShB,IAAI,OAAOiB,SAAS,S,WACjD,SAACC,EAAAA,GAAEA,C,UACD,SAACC,EAAAA,GAAKA,C,SAAC,yBAET,UAAC5I,EAAAA,EAAGA,CAACyI,UAAU,SAAShB,IAAI,O,WAC1B,UAACa,EAAAA,CAASG,UAAU,MAAMhB,IAAI,O,WAC5B,SAACS,EAAUA,CAAAA,IACX,SAACzE,EAAkBA,CAAAA,OAErB,UAAC6E,EAAAA,CAASG,UAAU,MAAMhB,IAAI,O,WAC5B,SAACxF,EAAiBA,CAAAA,IAClB,SAACkC,EAAaA,CAAAA,aAM1B,C,gBC/CA,MAAMkE,GAAgB5J,EAAAA,QAAOO,IAAG,Y,qIAAA;;;;;;;;;;;;;EAc1ByD,GAAShE,EAAAA,QAAOO,IAAG,Y,8HAAA;;;;;;;;;;;;EAanBuJ,IAAa9J,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,kIAAC;;;;;;;EAQxB6I,GAAOpK,EAAAA,QAAOqK,EAAC,Y,4HAEnB;;;;;;;;;;;sBAWqB3J,GAAUA,EAAMsB,iBAAmBtB,EAAMP,MAAM2F;;;;;;;;;EAUhEwE,IAAarK,EAAAA,EAAAA,IAAOD,EAAAA,EAAAA,SAAOoK,IAAAA,WAAAA,C,kIAAK;;;;;;;;GAShCG,IAAiBvK,EAAAA,EAAAA,SAAOsK,IAAAA,WAAAA,C,sIAAW;;;;;;;;;;;EAYnCE,IAAWxK,EAAAA,EAAAA,SAAOsK,IAAAA,WAAAA,C,gIAAW;;;;;;;;;;;EAY7BG,IAAWxK,EAAAA,EAAAA,IAAOD,EAAAA,EAAAA,SAAOoK,IAAAA,WAAAA,C,gIAAK;;;;;;;;;;GAY9BM,GAAc,UACdC,GAAc,UAEb,SAASC,KACd,MAAMzK,GAAQ8E,EAAAA,EAAAA,YACRlD,GAAamD,EAAAA,EAAAA,MACnB,OACE,SAAC0E,GAAaA,C,UACZ,SAACrI,EAAAA,EAAGA,CAACyI,UAAU,MAAMC,SAAS,SAASjB,IAAI,OAAOxH,MAAM,O,UACtD,UAACsI,GAAUA,CAACe,kBAAgB,gBAAgB/I,OAAO,O,WACjD,SAACoI,EAAAA,GAAEA,C,UACD,SAACC,EAAAA,GAAKA,C,SAAC,uBAET,UAACnG,GAAAA,C,WACC,UAACuG,GAAAA,CACCzH,QAAQ,UACRC,WAAW,QACXL,KAAK,4BACLO,OAAO,SACPC,IAAI,sBACJlB,gBAAiBD,EAAa,yBAA2B,yB,WAEzD,SAACjB,EAAUA,CAACO,MAAM,SAACyJ,EAAAA,GAAUA,CAAClJ,KAAM8I,KAAiB/J,MAAO+J,GAAapJ,MAAOqD,EAAAA,CAAC,iBACjF,SAACoG,EAAAA,GAAEA,CAACpK,MAAO+J,G,UACT,SAACP,EAAAA,GAAKA,C,SAAC,sBAGX,UAACK,GAAAA,CACC1H,QAAQ,UACRC,WAAW,QACXL,KAAK,4BACLO,OAAO,SACPC,IAAI,sBACJlB,gBAAiBD,EAAa,yBAA2B,yB,WAEzD,SAACjB,EAAUA,CAACO,MAAM,SAAC2J,EAAAA,GAAQA,CAACpJ,KAAM+I,KAAiBhK,MAAOgK,GAAarJ,MAAOqD,EAAAA,CAAC,UAC/E,SAACoG,EAAAA,GAAEA,CAACpK,MAAOgK,G,UACT,SAACR,EAAAA,GAAKA,C,SAAC,0CAGX,UAACM,GAAAA,CACCzI,gBAAiB7B,EAAM8K,QACvBnI,QAAQ,UACRC,WAAW,QACXL,KAAK,+BACLO,OAAO,SACPC,IAAI,sB,WAEJ,SAACpC,EAAUA,CAACO,MAAM,SAAC6J,EAAAA,GAAWA,CAACtJ,KAAMzB,EAAMqF,UAAa7E,MAAOR,EAAMqF,QAASlE,MAAOqD,EAAAA,CAAC,oBACtF,SAACoG,EAAAA,GAAEA,CAACpK,MAAOR,EAAMqF,Q,UACf,SAAC2E,EAAAA,GAAKA,C,SAAC,8DAQvB,C,gECpKA,MAAMgB,IAAOlL,EAAAA,EAAAA,GAAOD,EAAAA,QAAOO,IAAG,Y,yHAAA;;;;;;;;;;;;;GAcxB6K,IAAOnL,EAAAA,EAAAA,GAAOD,EAAAA,QAAOO,IAAG,Y,yHAAmB;;;;;;WAMtC,EAAGI,WAAYA;;;;;;;;;;;;;;;;;;GAmBpBkB,GAAY7B,EAAAA,QAAOO,IAAG,Y,8HAAoB;;;;;;;;;;;;;sBAa1B,EAAGJ,QAAOkL,UAAYA,EAAO,YAAclL,EAAM2F;;;;;;;;2CAQ5B,EAAG3F,YAC1C,MAAM,IAAEmL,EAAG,MAAEC,EAAK,KAAEC,IAASC,EAAAA,GAAAA,IAAWtL,EAAMkG,UAC9C,MAAO,GAAGiF,MAAQC,MAAUC,GAAM;;;EAKhCE,IAAkBzL,EAAAA,EAAAA,GAAOD,EAAAA,QAAOO,IAAG,Y,oIAAA;;;;WAI9B,EAAGJ,WAAYA,EAAMkG;GAW1BsF,GAAW3L,EAAAA,QAAOO,IAAG,Y,6HAAqB;aACnC,EAAGqL,aAAcA;;;;;gBAKd,EAAGzL,WAAYA,EAAMsG;;oBAEjB,EAAGtG,YAAY0L,OAhBlBlL,EAgB0BR,EAAMsG,QAhBdqF,EAAAA,SAAS;;2BAElBC,EAAAA,GAAAA,IAAQ,GAAIpL;;;6BAGVoL,EAAAA,GAAAA,IAAQ,GAAIpL;;EALxB,IAACA,CAgBwC;;;;;;EAOnD4B,GAAQvC,EAAAA,QAAOgG,GAAE,Y,0HAAmB;;;;;;;;WAQ/B,EAAGrF,WAAYA;;;;;;;;;EAwB1B,MAAMqL,GAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD3E,GAAW,CAAC,OAAK,OAAK,SAAK,KAC3B4E,GAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCC,GAAc,CAAC,IAAK,KAEnB,SAASC,GAASzL,GACvB,MAAMP,GAAQ8E,EAAAA,EAAAA,YACd,OACE,UAACpD,GAASA,CAACwJ,KAAM3K,EAAM2K,K,WACrB,UAACe,GAAAA,GAAGA,CAACnD,MAAM,SAASD,IAAI,K,WACtB,SAAC2C,GAAAA,CAASC,QAASlL,EAAM2K,KAAO,QAAU,UAC1C,SAAC9I,GAAKA,CAAC5B,MAAOD,EAAM2K,KAAOlL,EAAMsG,QAAUtG,EAAMkG,S,SAAW3F,EAAM2L,YAEpE,SAACC,GAAAA,CACCC,OAAQ7L,EAAM6L,OACdC,OAAQ9L,EAAM8L,OACdnE,MAAO3H,EAAM2H,MACbgD,KAAM3K,EAAM2K,KACZoB,MAAO/L,EAAM+L,MACbC,OAAQhM,EAAMgM,WAItB,CAEA,SAASJ,IAA8B,MAAEjE,EAAK,MAAEoE,EAAK,OAAEC,EAAM,KAAErB,IAC7D,MAAMsB,EAAQtE,EAAMuE,MAAM,IACpBzM,GAAQ8E,EAAAA,EAAAA,YAEd,OACE,SAACkG,GAAAA,CACCrI,QAAQ,UACR+J,QAASH,EAAS,UAAY,UAC9B3L,WAAY,CAAE+L,gBAAiB,KAAO9L,cAAeyL,G,SAEpDE,EAAMhD,KAAI,CAACoD,EAAcC,KAExB,MAAMC,EAAUjB,GAAQkB,SAASH,GAC7Bf,GACAE,GAAYgB,SAASH,GACrBb,GACA7E,GAAS6F,SAASH,GAClB1F,GACA4E,GAEJ,OAAO,SAACkB,GAAAA,CAAaJ,KAAMA,EAAkBE,QAASA,EAAStM,MAAO0K,EAAOlL,EAAMsG,QAAUtG,EAAM8F,UAA7D+G,EAAAA,KAI9C,CAEA,SAASG,IAAa,KAAEJ,EAAI,QAAEE,EAAO,MAAEtM,IACrC,MAGMgM,GA3DgBS,EA2DIH,EA3DMI,EA2DGJ,EAAQK,QAAQP,GA1D5CK,EAAIG,MAAMF,EAAGD,EAAII,QAAQC,OAAOL,EAAIG,MAAM,EAAGF,KADtD,IAAwBD,EAAUC,EA6DhC,MAAMK,EAAMf,EAAMW,QAAQP,GAEpB9L,EAAW,CACf6B,QAAS,CACP6K,EAAGD,GAAM,KAEXb,QAAS,CACPc,GAZW,GAYRD,EACH3M,WAAY,CACV6M,SAAU,EACVxE,KAAM,YAKZ,OACE,SAACsC,GAAAA,CAAgBzK,SAAUA,E,SACxB0L,EAAMhD,KAAI,CAACoD,EAAMC,KAChB,MAAMa,EAAe,CACnB/K,QAAS,CACPjC,QAAS,KAEXgM,QAAS,CACPhM,QAAS6M,IAAQV,EAAQ,EAAI,EAC7BjM,WAAY,CACVF,QAAS,CACP+M,SAAU,IAEZA,SAAU,EACVxE,KAAM,YAKZ,OACE,SAACgC,GAAAA,CAAKnK,SAAU4M,EAA0BlN,MAAOA,E,SAC9CoM,GADgCC,EAAAA,KAO7C,CCxOO,MCcDnL,GAAY7B,EAAAA,QAAOO,IAAG,Y,yHAAA;;;;;;;;;;;;;;;;;;;EAoBtBqJ,IAAgB5J,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,6HAAC;;;EAI3BuM,IAAgB9N,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,6HAAC;;;;EAK3BwM,IAAgB/N,EAAAA,EAAAA,SAAOuB,EAAAA,GAAGA,WAAAA,C,6HAAC;;;;EAK3ByM,GAAUhO,EAAAA,QAAOO,IAAG,Y,uHAAA;;;;;EAMpB0N,GAAWjO,EAAAA,QAAOO,IAAG,Y,wHAAA;;;;;EAMrB2N,GAAalO,EAAAA,QAAOO,IAAG,Y,0HAAA;;;;;EAMvB4N,GAAcnO,EAAAA,QAAOO,IAAG,Y,2HAAA;;;;;EAMxB6N,GAAapO,EAAAA,QAAOO,IAAG,Y,0HAAA;;;;;;;;;;;;;;;;;;;;;;EAuBvByD,GAAShE,EAAAA,QAAOO,IAAG,Y,sHAAA;;;;;;;;;;;;;EAcnB8N,GAAOrO,EAAAA,QAAOO,IAAG,Y,qHAAA;;;;;;EAOjB+N,GAAQtO,EAAAA,QAAOO,IAAG,Y,sHAAA;;;;;;EAOlBgO,IAAkBvO,EAAAA,EAAAA,SAAOwO,GAAAA,IAAYA,WAAAA,C,gIAAC;;;;sBAItB,EAAGrO,WAAYA,EAAM2F;;;;;;WAMhC,EAAG3F,WAAYA,EAAM8F;IAC5BwI,GAAAA;EAEEC,IAAiB1O,EAAAA,EAAAA,SAAO2O,GAAAA,GAAgBA,WAAAA,C,+HAAC;;YAEnC,EAAGxO,WAAYA,EAAM2F;UACvB,EAAG3F,WAAYA,EAAM8F;EAEzB2I,GAAsB,KAC1B,SAACzE,EAAAA,GAAKA,C,SAAC,sNAKT,SAAS0E,KACP,OACE,SAACN,GAAAA,CAAgB7L,KAAK,2B,UACpB,UAAC0J,GAAAA,GAAGA,CAACpD,IAAI,KAAKC,MAAM,S,WAClB,SAACkB,EAAAA,GAAKA,C,SAAC,gBACP,SAACuE,GAAAA,CAAAA,OAIT,CACO,SAASI,KACd,MAAM,IAAEC,EAAG,OAAErC,GD9JU,MACvB,MAAMqC,GAAMC,EAAAA,EAAAA,WACLtC,EAAQuC,IAAaC,EAAAA,EAAAA,WAAS,GAuBrC,OArBAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAK,IAAIC,sBACZC,IACC,IAAKA,EAAQ9B,OAAQ,OACrB,MAAO+B,GAAcD,EACjBC,EAAWC,gBACbP,GAAU,EACZ,GAEF,CACEQ,UAAW,MAMf,OAFAL,EAAGM,QAAQX,EAAIY,SAER,KACLP,EAAGQ,YAAY,CAChB,GACA,CAACb,IAEG,CAAEA,MAAKrC,SAAQ,ECqIEmD,GAExB,OACE,SAAChO,GAASA,C,UACR,UAAC+H,GAAaA,CAACmF,IAAKA,E,WAClB,SAAChB,GAAAA,C,UACC,UAAC/J,GAAMA,C,WACL,SAACqK,GAAAA,C,UACC,UAAC9M,EAAAA,EAAGA,CAACyI,UAAU,SAASa,kBAAgB,gBAAgB/I,OAAO,O,WAC7D,SAACoI,EAAAA,GAAEA,C,UACD,SAACC,EAAAA,GAAKA,C,SAAC,2BAET,UAAC5I,EAAAA,EAAGA,CAACuO,OAAO,IAAIC,SAAS,WAAW/F,UAAU,SAASC,SAAS,QAAQjB,IAAI,O,WAC1E,SAACgH,EAAAA,EAAKA,C,UACJ,SAACpB,GAAAA,CAAAA,MAEH,SAACC,GAAAA,CAAAA,YAIP,SAACP,GAAAA,C,UACC,SAAC2B,GAAAA,CAAMvD,OAAQA,YAIrB,UAACoB,GAAAA,CAAc7D,SAAS,SAASD,UAAU,SAAShB,IAAI,O,WACtD,SAACkB,EAAAA,GAAEA,C,UACD,SAACC,EAAAA,GAAKA,C,SAAC,2BAET,SAAC8F,GAAAA,CAAMvD,OAAQA,KACf,SAACsD,EAAAA,EAAKA,C,UACJ,SAACpB,GAAAA,CAAAA,MAEH,SAACC,GAAAA,CAAAA,UAKX,CAEA,SAASoB,IAAM,OAAEvD,I,IAsBXwD,EAAAA,EAAoDC,EAAAA,EArBxD,MAAM,aAAEC,IAAiB1I,EAAAA,EAAAA,MACnBwI,GAAqBG,EAAAA,EAAAA,KAA4B,CACrDxI,UAAW,CACTyI,QAASC,EAAAA,IAAgBC,MAGvBL,GAAqBE,EAAAA,EAAAA,KAA4B,CACrDxI,UAAW,CACTyI,QAASC,EAAAA,IAAgBE,MAGvBC,GAAcC,EAAAA,EAAAA,UAAQ,K,IAGLT,EAAAA,EAGAC,EAAAA,EAHrB,MAAMS,EAAeV,QAAAA,EAAAA,SAAAA,IAAAA,GAAwB,QAAxBA,EAAAA,EAAoBhI,YAApBgI,IAAAA,OAAAA,EAAAA,EAA0BW,yBACzCC,EAAWF,GAAgBA,EAAapD,QAAU,EAAIoD,EAAaA,EAAapD,OAAS,GAAGnF,MAAQ,EAEpG0I,EAAeZ,QAAAA,EAAAA,SAAAA,IAAAA,GAAwB,QAAxBA,EAAAA,EAAoBjI,YAApBiI,IAAAA,OAAAA,EAAAA,EAA0BU,yBAG/C,OAAOC,GAFUC,GAAgBA,EAAavD,QAAU,EAAIuD,EAAaA,EAAavD,OAAS,GAAGnF,MAAQ,EAEhF,GACzB,CAAC6H,QAAAA,EAAAA,SAAAA,IAAAA,GAAwB,QAAxBA,EAAAA,EAAoBhI,YAApBgI,IAAAA,OAAAA,EAAAA,EAA0BW,yBAA0BV,QAAAA,EAAAA,SAAAA,IAAAA,GAAwB,QAAxBA,EAAAA,EAAoBjI,YAApBiI,IAAAA,OAAAA,EAAAA,EAA0BU,2BAElF,OACE,UAACzC,GAAAA,C,WACC,SAACJ,GAAAA,C,UACC,SAAC7B,GAAQA,CACPE,MAAO1H,EAAAA,CAAC,kBACR0D,MAAO+H,EAAa,CAAEY,MAAO,EAAI,IAAM,GAAI5H,KAAMC,EAAAA,GAAW4H,iBAC5DxE,MAAO,EACPC,OAAQA,OAGZ,SAACuB,GAAAA,C,UACC,SAAC9B,GAAQA,CACPE,MAAO1H,EAAAA,CAAC,oBACR0D,MAAO+H,EAAa,CAAEY,MAAO,KAAO,IAAM,EAAG5H,KAAMC,EAAAA,GAAW6H,qBAC9DzE,MAAO,GACPC,OAAQA,OAGZ,SAACwB,GAAAA,C,UACC,SAAC/B,GAAQA,CACPE,MAAO1H,EAAAA,CAAC,oBACR0D,MAAO+H,EAAa,CAAEY,MAAO,IAAM,IAAM,EAAG5H,KAAMC,EAAAA,GAAW4H,iBAC7DxE,MAAO,GACPC,OAAQA,OAGZ,SAACyB,GAAAA,C,UACC,SAAChC,GAAQA,CACPE,MAAO1H,EAAAA,CAAC,aACR0D,MAAO+H,EAAa,CAAEY,MAAON,GAAe,IAAWtH,KAAMC,EAAAA,GAAW4H,iBACxE5F,MAAI,EACJoB,MAAO,GACPC,OAAQA,QAKlB,CC7PA,MAAM7K,GAAY7B,EAAAA,QAAOO,IAAG,Y,8GAAA;;;;;;;;;;;EA0B5B,IAba4Q,EAAAA,EAAAA,aAA2B,SAAczQ,EAAO0Q,GAC3D,OACE,UAACvP,GAASA,C,WACR,SAACtB,MAAAA,CAAIwO,IAAKqC,E,UACR,SAACrH,GAAYA,CAAAA,MAEf,SAAC+E,GAAKA,CAAAA,IACN,SAAClE,GAAaA,CAAAA,IACd,SAACyG,GAAAA,EAAMA,CAAAA,KAGb,G","sources":["pages/Landing/components/cards/PillButton.tsx","pages/Landing/components/cards/ValuePropCard.tsx","pages/Landing/components/cards/DocumentationCard.tsx","pages/Landing/components/cards/DownloadWalletCard.tsx","pages/Landing/components/cards/LiquidityCard.tsx","pages/Landing/components/cards/WebappCard.tsx","pages/Landing/sections/DirectToDefi.tsx","pages/Landing/sections/NewsletterEtc.tsx","pages/Landing/components/StatCard.tsx","pages/Landing/sections/useInView.tsx","pages/Landing/sections/Stats.tsx","pages/Landing/Fold.tsx"],"sourcesContent":["import { motion, MotionProps } from 'framer-motion'\nimport styled from 'styled-components'\n\nimport { Box } from '../Generics'\nimport { ArrowRight } from '../Icons'\n\nconst Button = styled(motion.button)<{ cursor?: string }>`\n  display: flex;\n  padding: 12px 16px;\n  border-radius: 24px;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n  background-color: ${({ theme }) => theme.surface1};\n  overflow: hidden;\n  cursor: ${({ cursor }) => cursor ?? 'pointer'};\n  flex: none;\n`\nconst Slider = styled(motion.div)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`\nconst Label = styled.span`\n  color: ${(props) => props.color};\n  font-family: Basel;\n  font-size: 20px;\n  @media (max-width: 1024px) {\n    font-size: 18px;\n  }\n  font-style: normal;\n  font-weight: 535;\n  line-height: 24px; /* 120% */\n  flex: none;\n`\ntype OpacityProps = {\n  opacity: number\n}\nconst Opacity = styled(motion.div)<OpacityProps & MotionProps>`\n  flex: 0;\n  display: flex;\n  overflow: visible;\n  opacity: ${(props) => props.opacity};\n`\n\ntype PillButtonProps = {\n  label: string\n  icon: React.ReactNode\n  color?: string\n  cursor?: string\n  onClick?: () => void\n}\n\nexport function PillButton(props: PillButtonProps) {\n  const variants = {\n    intial: {\n      x: 0,\n    },\n    hover: {\n      x: -24,\n    },\n  }\n  const icnVars = {\n    intial: {\n      opacity: 1,\n    },\n    hover: {\n      opacity: 0,\n    },\n  }\n\n  const arrowVars = {\n    intial: {\n      opacity: 0,\n    },\n    hover: {\n      opacity: 1,\n    },\n  }\n\n  return (\n    <Button transition={{ delayChildren: 0 }} cursor={props.cursor}>\n      <Slider variants={variants}>\n        <Opacity opacity={1} variants={icnVars}>\n          {props.icon}\n        </Opacity>\n        <Label color={props.color}>{props.label}</Label>\n        <Opacity opacity={0} variants={arrowVars}>\n          <Box width=\"0px\" overflow=\"visible\">\n            <ArrowRight size=\"24px\" fill={props.color} />\n          </Box>\n        </Opacity>\n      </Slider>\n    </Button>\n  )\n}\n","import { motion } from 'framer-motion'\nimport { useNavigate } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nimport { Box, BoxProps } from '../Generics'\n\ntype ValuePropCardProps = {\n  isDarkMode?: boolean\n  backgroundColor?: { light: string; dark: string }\n  textColor?: string\n  height?: string\n  minHeight?: string\n  tagText?: string\n  titleText?: string\n  titleWidth?: string\n  alignTextToBottom?: boolean\n  children?: React.ReactNode\n  button?: React.ReactNode\n  href?: string\n  to?: string\n}\n\nconst Container = motion(styled(Box)<ValuePropCardProps & BoxProps>`\n  position: relative;\n  border-radius: 32px;\n  width: 100%;\n  cursor: pointer;\n  height: ${(props) => props.height || '609px'};\n  background-color: ${(props) => (props.isDarkMode ? props.backgroundColor?.dark : props.backgroundColor?.light)};\n  overflow: hidden;\n  text-decoration: none;\n  @media (max-width: 1024px) {\n    height: ${(props) => props.height || '516px'};\n    min-height: ${(props) => props.minHeight || '240px'};\n  }\n  @media (max-width: 768px) {\n    height: auto;\n    min-height: ${(props) => props.minHeight || '240px'};\n  }\n`)\n\nconst Inner = styled.div<{ alignTextToBottom?: boolean }>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  ${({ alignTextToBottom }) =>\n    alignTextToBottom\n      ? css`\n          height: 100%;\n          justify-content: space-between;\n        `\n      : 'height: unset;'}\n  z-index: 5;\n  gap: 24px;\n  padding: 32px;\n  @media (max-width: 1024px) {\n    gap: 16px;\n    padding: 24px;\n  }\n  @media (max-width: 396px) {\n    padding: 20px;\n  }\n`\nconst Title = styled.div`\n  color: ${(props) => props.color};\n  font-feature-settings: 'ss07' on;\n  font-family: Basel;\n  font-size: 36px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 44px;\n  white-space: pre-line;\n  text-wrap: pretty;\n  @media (max-width: 1024px) {\n    font-size: 28px;\n    line-height: 32px;\n  }\n  @media (max-width: 768px) {\n    font-size: 24px;\n    line-height: 32px;\n  }\n`\nexport default function ValuePropCard(props: ValuePropCardProps & BoxProps) {\n  const { isDarkMode, backgroundColor, height, textColor, minHeight, alignTextToBottom, href, to } = props\n  const navigate = useNavigate()\n  const handleClick = () => {\n    if (to) {\n      navigate(to)\n    }\n  }\n  return (\n    <Container\n      initial=\"initial\"\n      whileHover=\"hover\"\n      isDarkMode={isDarkMode}\n      backgroundColor={backgroundColor}\n      height={height}\n      minHeight={minHeight}\n      as=\"a\"\n      href={href}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      onClick={handleClick}\n      {...props}\n    >\n      <Inner alignTextToBottom={alignTextToBottom}>\n        {props.button}\n        <Title color={textColor}>{props.titleText}</Title>\n      </Inner>\n      {props.children}\n    </Container>\n  )\n}\n","import { Alignment, Fit, Layout, useRive } from '@rive-app/react-canvas'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { t } from 'i18n'\nimport styled from 'styled-components'\n\nimport { CodeBrackets } from '../Icons'\nimport { PillButton } from './PillButton'\nimport ValuePropCard from './ValuePropCard'\n\nconst Contents = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n\n  opacity: 1;\n  @media (max-width: 1280px) {\n    opacity: 0.32;\n  }\n  @media (max-width: 768px) {\n    opacity: 0;\n  }\n`\n\ntype WebappCardProps = {\n  isDarkMode?: boolean\n  tagText?: string\n}\n\nconst primary = '#00C3A0'\n\nexport function DocumentationCard(props: WebappCardProps) {\n  const { rive, RiveComponent } = useRive({\n    src: '/rive/landing-page.riv',\n    artboard: 'Dev',\n    stateMachines: 'Animation',\n    layout: new Layout({ fit: Fit.Contain, alignment: Alignment.CenterRight }),\n  })\n\n  const isScreenSize = useScreenSize()\n  const screenIsLarge = isScreenSize['lg']\n  const screenIsXLarge = isScreenSize['xl']\n\n  return (\n    <ValuePropCard\n      height={screenIsLarge ? '340px' : '240px'}\n      href=\"https://docs.uniswap.org/\"\n      backgroundColor={{ dark: 'rgba(0, 195, 160, 0.08);', light: 'rgba(0, 195, 160, 0.06);' }}\n      isDarkMode={props.isDarkMode}\n      textColor={primary}\n      button={\n        <PillButton color={primary} label={t`Developer docs`} icon={<CodeBrackets size=\"24px\" fill={primary} />} />\n      }\n      titleText={t`Build the next generation of open applications and tools.`}\n      paddingRight={screenIsXLarge ? '16%' : '0%'}\n      alignTextToBottom\n    >\n      <Contents>\n        <RiveComponent onMouseEnter={() => rive && rive.play()} />\n      </Contents>\n    </ValuePropCard>\n  )\n}\n","import { Alignment, Fit, Layout, useRive } from '@rive-app/react-canvas'\nimport { t } from 'i18n'\nimport styled, { useTheme } from 'styled-components'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\n\nimport { Wallet } from '../Icons'\nimport { PillButton } from './PillButton'\nimport ValuePropCard from './ValuePropCard'\n\nconst Contents = styled.div`\n  width: 100%;\n  height: 75%;\n  position: absolute;\n  margin: auto;\n  bottom: 0;\n  z-index: 1;\n  @media (max-width: 980px) and (min-width: 768px) {\n    width: 125%;\n    transform: translateX(-10.25%);\n  }\n`\n\nexport function DownloadWalletCard() {\n  const theme = useTheme()\n  const isDarkMode = useIsDarkMode()\n\n  const { rive: lightAnimation, RiveComponent: LightAnimation } = useRive({\n    src: '/rive/landing-page.riv',\n    artboard: 'Mobile-Light',\n    stateMachines: 'Animation',\n    layout: new Layout({ fit: Fit.Contain, alignment: Alignment.BottomCenter }),\n  })\n\n  const { rive: darkAnimation, RiveComponent: DarkAnimation } = useRive({\n    src: '/rive/landing-page.riv',\n    artboard: 'Mobile-Dark',\n    stateMachines: 'Animation',\n    layout: new Layout({ fit: Fit.Contain, alignment: Alignment.BottomCenter }),\n  })\n\n  return (\n    <ValuePropCard\n      href=\"https://wallet.uniswap.org/\"\n      minHeight=\"500px\"\n      isDarkMode={isDarkMode}\n      textColor={theme.accent1}\n      backgroundColor={{ dark: 'rgba(252, 114, 255, 0.12)', light: 'rgba(252, 114, 255, 0.12)' }}\n      button={\n        <PillButton\n          color={theme.accent1}\n          label={t`Uniswap wallet`}\n          icon={<Wallet size=\"24px\" fill={theme.accent1} />}\n        />\n      }\n      titleText={t`The wallet built for swapping. Available on iOS and Android.`}\n    >\n      <Contents>\n        {isDarkMode ? (\n          <DarkAnimation onMouseEnter={() => darkAnimation?.play()} />\n        ) : (\n          <LightAnimation onMouseEnter={() => lightAnimation?.play()} />\n        )}\n      </Contents>\n    </ValuePropCard>\n  )\n}\n","import { Alignment, Fit, Layout, useRive } from '@rive-app/react-canvas'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { t } from 'i18n'\nimport styled from 'styled-components'\n\nimport { Bars } from '../Icons'\nimport { PillButton } from './PillButton'\nimport ValuePropCard from './ValuePropCard'\n\nconst Contents = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n\n  opacity: 1;\n  @media (max-width: 1280px) {\n    opacity: 0.24;\n  }\n  @media (max-width: 768px) {\n    opacity: 0;\n  }\n`\n\ntype LiquidityCardProps = {\n  isDarkMode?: boolean\n}\n\nconst primary = '#9E62FF'\n\nexport function LiquidityCard(props: LiquidityCardProps) {\n  const { rive, RiveComponent } = useRive({\n    src: '/rive/landing-page.riv',\n    artboard: 'LP',\n    stateMachines: 'Animation',\n    layout: new Layout({ fit: Fit.Contain, alignment: Alignment.CenterRight }),\n  })\n\n  const isScreenSize = useScreenSize()\n  const screenIsLarge = isScreenSize['lg']\n  const screenIsXLarge = isScreenSize['xl']\n\n  return (\n    <ValuePropCard\n      to=\"/pool\"\n      tagText={t`Provide Liquidity`}\n      height={screenIsLarge ? '340px' : '240px'}\n      isDarkMode={props.isDarkMode}\n      textColor={primary}\n      backgroundColor={{ dark: 'rgba(136, 63, 255, 0.12)', light: 'rgba(136, 63, 255, 0.06)' }}\n      button={<PillButton color={primary} label={t`Liquidity`} icon={<Bars size=\"24px\" fill={primary} />} />}\n      titleText={t`Provide liquidity to pools on the Uniswap Protocol and earn fees on swaps.`}\n      paddingRight={screenIsXLarge ? '16%' : '0%'}\n      alignTextToBottom\n    >\n      <Contents>\n        <RiveComponent onMouseEnter={() => rive && rive.play()} />\n      </Contents>\n    </ValuePropCard>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo'\nimport { DeltaArrow } from 'components/Tokens/TokenDetails/Delta'\nimport { LDO, NATIVE_CHAIN_ID, UNI, USDC_BASE } from 'constants/tokens'\nimport { getTokenDetailsURL } from 'graphql/data/util'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { t } from 'i18n'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTokenPromoQuery } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { useCallback } from 'react'\nimport { Box } from '../Generics'\nimport { Computer } from '../Icons'\nimport { PillButton } from './PillButton'\nimport ValuePropCard from './ValuePropCard'\n\nconst Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  padding: 32px;\n  padding-bottom: 32px;\n  @media (max-width: 1024px) {\n    padding: 24px;\n    padding-bottom: 32px;\n  }\n  @media (max-width: 396px) {\n    padding: 16px;\n    padding-bottom: 24px;\n  }\n`\n\nconst TokenRow = styled.div`\n  width: 100%;\n  height: 72px;\n  overflow: hidden;\n  padding: 16px;\n  padding-right: 24px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface1};\n  @media (max-width: 1024px) {\n    height: 64px;\n    padding-right: 16px;\n  }\n  @media (max-width: 768px) {\n    height: 56px;\n    padding-right: 16px;\n  }\n  @media (max-width: 468px) {\n    height: 48px;\n    padding: 12px;\n    border-radius: 16px;\n  }\n  transition: background-color 125ms ease-in, transform 125ms ease-in;\n  &:hover {\n    background-color: ${({ theme }) => theme.surface2};\n    transform: scale(1.03);\n  }\n`\nconst TokenName = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-family: Basel;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: ${(props) => props.color || props.theme.neutral1};\n  @media (max-width: 1024px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n  @media (max-width: 468px) {\n    font-size: 16px;\n    line-height: 20px;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoint.xs}px) {\n    display: none;\n  }\n`\nconst TokenTicker = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-family: Basel;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32px;\n  color: ${(props) => props.color || props.theme.neutral2};\n  @media (max-width: 1024px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n  @media (max-width: 468px) {\n    font-size: 16px;\n    line-height: 20px;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoint.xs}px) {\n    color: ${(props) => props.color || props.theme.neutral1};\n  }\n`\nconst TokenPrice = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-family: Basel;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-variant-numeric: tabular-nums;\n  line-height: 32px;\n  color: ${(props) => props.color || props.theme.neutral1};\n  @media (max-width: 1024px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n  @media (max-width: 468px) {\n    font-size: 16px;\n    line-height: 20px;\n  }\n`\nconst DeltaText = styled.h3`\n  text-align: right;\n  padding: 0;\n  margin: 0;\n  font-family: Basel;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-variant-numeric: tabular-nums;\n  line-height: 32px;\n  color: ${(props) => (props.color === 'red' ? props.theme.critical : props.theme.success)};\n  @media (max-width: 1024px) {\n    font-size: 18px;\n    line-height: 24px;\n    width: 50px;\n  }\n  @media (max-width: 468px) {\n    font-size: 16px;\n    line-height: 20px;\n    width: 50px;\n  }\n`\nconst DeltaContainer = styled(Box)`\n  @media (min-width: 1030px) and (max-width: 1150px) {\n    display: none;\n  }\n  @media (min-width: 767px) and (max-width: 915px) {\n    display: none;\n  }\n`\n\ntype WebappCardProps = {\n  isDarkMode?: boolean\n  tagText?: string\n}\n\nconst primary = '#2ABDFF'\n\nconst tokens: { chainId: SupportedInterfaceChainId; address: string }[] = [\n  {\n    chainId: ChainId.MAINNET,\n    address: 'ETH',\n  },\n  {\n    chainId: ChainId.BASE,\n    address: USDC_BASE.address,\n  },\n  {\n    chainId: ChainId.MAINNET,\n    address: UNI[ChainId.MAINNET].address,\n  },\n  {\n    chainId: ChainId.MAINNET,\n    address: LDO.address,\n  },\n]\n\nfunction Token({ chainId, address }: { chainId: SupportedInterfaceChainId; address: string }) {\n  const screenIsSmall = useScreenSize()['sm']\n  const navigate = useNavigate()\n  const { formatFiatPrice, formatDelta } = useFormatter()\n  const currency = useCurrency(address, chainId)\n  const tokenPromoQuery = useTokenPromoQuery({\n    variables: {\n      address: currency?.wrapped.address,\n      chain: chainIdToBackendChain({ chainId }),\n    },\n  })\n  const price = tokenPromoQuery.data?.token?.market?.price?.value ?? 0\n  const pricePercentChange = tokenPromoQuery.data?.token?.market?.pricePercentChange?.value ?? 0\n  const handleClick = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.stopPropagation()\n      navigate(\n        getTokenDetailsURL({\n          address: address === 'ETH' ? NATIVE_CHAIN_ID : address,\n          chain: chainIdToBackendChain({ chainId }),\n        })\n      )\n    },\n    [address, chainId, navigate]\n  )\n  return (\n    <TokenRow onClick={handleClick}>\n      <PortfolioLogo currencies={[currency]} chainId={chainId} size={screenIsSmall ? 32 : 24} />\n      <Box justify=\"space-between\" gap=\"16px\">\n        <Box width=\"auto\" gap=\"8px\" align=\"center\" overflow=\"hidden\">\n          <TokenName>{currency?.name}</TokenName>\n          <TokenTicker>{currency?.symbol}</TokenTicker>\n        </Box>\n        <Box width=\"auto\" gap=\"8px\" align=\"center\">\n          <TokenPrice>\n            {formatFiatPrice({\n              price,\n              type: NumberType.FiatTokenPrice,\n            })}\n          </TokenPrice>\n          <DeltaContainer gap=\"4px\" align=\"center\" justify=\"flex-end\">\n            <DeltaArrow delta={pricePercentChange} />\n            <DeltaText color={pricePercentChange < 0 ? 'red' : 'green'}>{formatDelta(pricePercentChange)}</DeltaText>\n          </DeltaContainer>\n        </Box>\n      </Box>\n    </TokenRow>\n  )\n}\n\nexport function WebappCard(props: WebappCardProps) {\n  return (\n    <ValuePropCard\n      to=\"/tokens/ethereum\"\n      minHeight=\"450px\"\n      isDarkMode={props.isDarkMode}\n      textColor={primary}\n      backgroundColor={{ dark: 'rgba(0, 102, 255, 0.12)', light: 'rgba(0, 102, 255, 0.04)' }}\n      button={<PillButton color={primary} label={t`Web app`} icon={<Computer size=\"24px\" fill={primary} />} />}\n      titleText={t`Swapping made simple. Access thousands of tokens on 8+ chains.`}\n    >\n      <Contents>\n        {tokens.map((token) => (\n          <Token key={`tokenRow-${token.address}`} chainId={token.chainId} address={token.address} />\n        ))}\n      </Contents>\n    </ValuePropCard>\n  )\n}\n","import styled from 'styled-components'\n\nimport { Trans } from 'i18n'\nimport { Box, H2 } from '../components/Generics'\nimport { DocumentationCard } from '../components/cards/DocumentationCard'\nimport { DownloadWalletCard } from '../components/cards/DownloadWalletCard'\nimport { LiquidityCard } from '../components/cards/LiquidityCard'\nimport { WebappCard } from '../components/cards/WebappCard'\n\nconst SectionLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 40px;\n  @media (max-width: 768px) {\n    padding: 0 48px;\n  }\n  @media (max-width: 468px) {\n    padding: 0 24px;\n  }\n`\nconst RowToCol = styled(Box)`\n  height: auto;\n  flex-shrink: 1;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\nconst SectionCol = styled(Box)`\n  flex-direction: column;\n  max-width: 1280px;\n  gap: 32px;\n  @media (max-width: 768px) {\n    gap: 24px;\n  }\n`\nexport function DirectToDefi() {\n  return (\n    <SectionLayout>\n      <SectionCol direction=\"column\" gap=\"40px\" maxWidth=\"1280px\">\n        <H2>\n          <Trans>Go direct to DeFi</Trans>\n        </H2>\n        <Box direction=\"column\" gap=\"16px\">\n          <RowToCol direction=\"row\" gap=\"16px\">\n            <WebappCard />\n            <DownloadWalletCard />\n          </RowToCol>\n          <RowToCol direction=\"row\" gap=\"16px\">\n            <DocumentationCard />\n            <LiquidityCard />\n          </RowToCol>\n        </Box>\n      </SectionCol>\n    </SectionLayout>\n  )\n}\n","import { motion } from 'framer-motion'\nimport { t, Trans } from 'i18n'\nimport styled, { useTheme } from 'styled-components'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\n\nimport { PillButton } from '../components/cards/PillButton'\nimport { Box, H2, H3 } from '../components/Generics'\nimport { BookOpen, ChatBubbles, HelpCircle } from '../components/Icons'\n\nconst SectionLayout = styled.div`\n  width: 100%;\n  max-width: 1360px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 40px;\n  @media (max-width: 768px) {\n    padding: 0 48px;\n  }\n  @media (max-width: 468px) {\n    padding: 0 24px;\n  }\n`\nconst Layout = styled.div`\n  width: 100%;\n  max-width: 1280px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  grid-column-gap: 16px;\n  grid-row-gap: 16px;\n  @media (max-width: 768px) {\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\nconst SectionCol = styled(Box)`\n  flex-direction: column;\n  max-width: 1328px;\n  gap: 24px;\n  @media (max-width: 768px) {\n    gap: 24px;\n  }\n`\nconst Card = styled.a<{\n  backgroundColor?: string\n}>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  position: relative;\n  height: 250px;\n  border-radius: 20px;\n  padding: 32px 28px;\n  overflow: hidden;\n  text-decoration: none;\n  background-color: ${(props) => props.backgroundColor || props.theme.surface2};\n  @media (max-width: 1024px) {\n    gap: 16px;\n    padding: 24px;\n  }\n  @media (max-width: 768px) {\n    gap: 16px;\n    padding: 24px;\n  }\n`\nconst SquareCard = motion(styled(Card)`\n  grid-column: span 1 / span 1;\n  grid-row: span 4 / span 4;\n\n  @media (max-width: 768px) {\n    grid-column: span 4 / span 4;\n    grid-row: span 1 / span 1;\n  }\n`)\nconst HelpCenterCard = styled(SquareCard)`\n  @media (max-width: 1024px) {\n    grid-column: span 2 / span 2;\n\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n  @media (max-width: 768px) {\n    grid-column: span 4 / span 4;\n    grid-row: span 1 / span 1;\n  }\n`\nconst BlogCard = styled(SquareCard)`\n  @media (max-width: 1024px) {\n    grid-column: span 2 / span 2;\n\n    grid-row-start: 3;\n    grid-row-end: 5;\n  }\n  @media (max-width: 768px) {\n    grid-column: span 4 / span 4;\n    grid-row: span 1 / span 1;\n  }\n`\nconst RectCard = motion(styled(Card)`\n  grid-column: span 2 / span 2;\n  grid-row: span 4 / span 4;\n\n  gap: 32px;\n\n  @media (max-width: 768px) {\n    grid-column: span 4 / span 4;\n    grid-row: span 1 / span 1;\n  }\n`)\n\nconst helpPrimary = '#FF4D00'\nconst blogPrimary = '#8E8767'\n\nexport function NewsletterEtc() {\n  const theme = useTheme()\n  const isDarkMode = useIsDarkMode()\n  return (\n    <SectionLayout>\n      <Box direction=\"row\" maxWidth=\"1328px\" gap=\"24px\" width=\"100%\">\n        <SectionCol justify-content=\"space-between\" height=\"100%\">\n          <H2>\n            <Trans>Connect with us</Trans>\n          </H2>\n          <Layout>\n            <HelpCenterCard\n              initial=\"initial\"\n              whileHover=\"hover\"\n              href=\"https://help.uniswap.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              backgroundColor={isDarkMode ? 'rgba(255, 77, 0, 0.08)' : 'rgba(255, 77, 0, 0.04)'}\n            >\n              <PillButton icon={<HelpCircle fill={helpPrimary} />} color={helpPrimary} label={t`Help Center`} />\n              <H3 color={helpPrimary}>\n                <Trans>Get support</Trans>\n              </H3>\n            </HelpCenterCard>\n            <BlogCard\n              initial=\"initial\"\n              whileHover=\"hover\"\n              href=\"https://blog.uniswap.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              backgroundColor={isDarkMode ? 'rgba(98, 84, 50, 0.16)' : 'rgba(98, 84, 50, 0.04)'}\n            >\n              <PillButton icon={<BookOpen fill={blogPrimary} />} color={blogPrimary} label={t`Blog`} />\n              <H3 color={blogPrimary}>\n                <Trans>Insights and news from the team</Trans>\n              </H3>\n            </BlogCard>\n            <RectCard\n              backgroundColor={theme.accent2}\n              initial=\"initial\"\n              whileHover=\"hover\"\n              href=\"https://twitter.com/Uniswap/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <PillButton icon={<ChatBubbles fill={theme.accent1} />} color={theme.accent1} label={t`Stay connected`} />\n              <H3 color={theme.accent1}>\n                <Trans>Follow @Uniswap on X for the latest updates</Trans>\n              </H3>\n            </RectCard>\n          </Layout>\n        </SectionCol>\n      </Box>\n    </SectionLayout>\n  )\n}\n","import Row from 'components/Row'\nimport { motion } from 'framer-motion'\nimport { parseToRgb } from 'polished'\nimport styled, { keyframes, useTheme } from 'styled-components'\nimport { opacify } from 'theme/utils'\n\nconst Mask = motion(styled.div`\n  position: relative;\n  display: flex;\n  flex: 0;\n  min-height: 52px;\n  width: 100%;\n  overflow: hidden;\n  @media (max-width: 1024px) {\n    min-height: 40px;\n  }\n  @media (max-width: 768px) {\n    min-height: 32px;\n  }\n`)\nconst Char = motion(styled.div<{ color: string }>`\n  font-variant-numeric: lining-nums tabular-nums;\n  font-family: Basel;\n  font-size: 52px;\n  font-style: normal;\n  font-weight: 500;\n  color: ${({ color }) => color};\n  line-height: 52px;\n  @media (max-width: 1280px) {\n    font-size: 40px;\n    line-height: 40px;\n  }\n  @media (max-width: 1050px) {\n    font-size: 32px;\n    line-height: 32px;\n  }\n  @media (max-width: 850px) {\n    font-size: 28px;\n    line-height: 28px;\n  }\n  @media (max-width: 396px) {\n    font-size: 22px;\n    line-height: 22px;\n  }\n`)\nconst Container = styled.div<{ live?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  border-radius: 20px;\n\n  width: 100%;\n  height: 100%;\n  max-height: 230px;\n\n  padding: 32px;\n\n  background-color: ${({ theme, live }) => (live ? '#2FBA610A' : theme.surface2)};\n  overflow: hidden;\n\n  @media (max-width: 1024px) {\n    padding: 24px;\n  }\n  @media (max-width: 768px) {\n  }\n  background-image: radial-gradient(rgba(${({ theme }) => {\n    const { red, green, blue } = parseToRgb(theme.neutral2)\n    return `${red}, ${green}, ${blue}`\n  }}, 0.25) 0.5px, transparent 0)};\n  background-size: 12px 12px;\n  background-position: -8.5px -8.5px;\n`\nconst SpriteContainer = motion(styled.div`\n  pointer-events: none;\n  diplay: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.neutral2};\n`)\n\nconst pulsate = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${opacify(24, color)};\n  }\n  100% {\n    box-shadow: 0 0 0 4px ${opacify(24, color)};\n  }\n`\nconst LiveIcon = styled.div<{ display: string }>`\n  display: ${({ display }) => display};\n  width: 6px;\n  height: 6px;\n\n  border-radius: 50%;\n  background: ${({ theme }) => theme.success};\n\n  animation-name: ${({ theme }) => pulsate(theme.success)};\n  animation-fill-mode: forwards;\n  animation-direction: alternate;\n  animation-duration: 1000ms;\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n`\nconst Title = styled.h3<{ color: string }>`\n  padding: 0;\n  margin: 0;\n  font-family: Basel;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 535;\n  line-height: 32px; /* 133.333% */\n  color: ${({ color }) => color};\n  @media (max-width: 1024px) {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  @media (max-width: 768px) {\n    font-size: 18px;\n    line-height: 20px;\n  }\n`\ntype StatCardProps = {\n  title: string\n  value: string\n  live?: boolean\n  prefix?: string\n  suffix?: string\n  delay?: number\n  inView?: boolean\n}\n\nfunction rotateArray<T>(arr: T[], n: number) {\n  return arr.slice(n, arr.length).concat(arr.slice(0, n))\n}\n\nconst numeric = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\nconst currency = ['¥', '£', '€', '$']\nconst suffixes = [' ', 'K', 'M', 'B', 'T']\nconst delineators = [',', '.']\n\nexport function StatCard(props: StatCardProps) {\n  const theme = useTheme()\n  return (\n    <Container live={props.live}>\n      <Row align=\"center\" gap=\"sm\">\n        <LiveIcon display={props.live ? 'block' : 'none'} />\n        <Title color={props.live ? theme.success : theme.neutral2}>{props.title}</Title>\n      </Row>\n      <StringInterpolationWithMotion\n        prefix={props.prefix}\n        suffix={props.suffix}\n        value={props.value}\n        live={props.live}\n        delay={props.delay}\n        inView={props.inView}\n      />\n    </Container>\n  )\n}\n\nfunction StringInterpolationWithMotion({ value, delay, inView, live }: Omit<StatCardProps, 'title'>) {\n  const chars = value.split('')\n  const theme = useTheme()\n\n  return (\n    <Mask\n      initial=\"initial\"\n      animate={inView ? 'animate' : 'initial'}\n      transition={{ staggerChildren: 0.025, delayChildren: delay }}\n    >\n      {chars.map((char: string, index: number) => {\n        // select charset based on char\n        const charset = numeric.includes(char)\n          ? numeric\n          : delineators.includes(char)\n          ? delineators\n          : currency.includes(char)\n          ? currency\n          : suffixes\n\n        return <NumberSprite char={char} key={index} charset={charset} color={live ? theme.success : theme.neutral1} />\n      })}\n    </Mask>\n  )\n}\n\nfunction NumberSprite({ char, charset, color }: { char: string; charset: string[]; color: string }) {\n  const height = 60\n\n  // rotate array so that the char is at the top\n  const chars = rotateArray(charset, charset.indexOf(char))\n\n  const idx = chars.indexOf(char)\n\n  const variants = {\n    initial: {\n      y: idx + 3 * -height,\n    },\n    animate: {\n      y: idx * -height,\n      transition: {\n        duration: 1,\n        type: 'spring',\n      },\n    },\n  }\n\n  return (\n    <SpriteContainer variants={variants}>\n      {chars.map((char, index) => {\n        const charVariants = {\n          initial: {\n            opacity: 0.25,\n          },\n          animate: {\n            opacity: idx === index ? 1 : 0,\n            transition: {\n              opacity: {\n                duration: 0.5,\n              },\n              duration: 1,\n              type: 'spring',\n            },\n          },\n        }\n\n        return (\n          <Char variants={charVariants} key={index} color={color}>\n            {char}\n          </Char>\n        )\n      })}\n    </SpriteContainer>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport const useInView = () => {\n  const ref = useRef<any>()\n  const [inView, setInView] = useState(false)\n\n  useEffect(() => {\n    const io = new IntersectionObserver(\n      (entries) => {\n        if (!entries.length) return\n        const [firstEntry] = entries\n        if (firstEntry.isIntersecting) {\n          setInView(true)\n        }\n      },\n      {\n        threshold: 0.25,\n      }\n    )\n\n    io.observe(ref.current)\n\n    return () => {\n      io.disconnect()\n    }\n  }, [ref])\n\n  return { ref, inView }\n}\n","import Row from 'components/Row'\nimport { t, Trans } from 'i18n'\nimport { useMemo } from 'react'\nimport { ArrowRightCircle } from 'react-feather'\nimport styled from 'styled-components'\nimport { ClickableStyle, ExternalLink } from 'theme/components'\nimport {\n  ProtocolVersion,\n  useDailyProtocolVolumeQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { Body1, Box, H2 } from '../components/Generics'\nimport { StatCard } from '../components/StatCard'\nimport { useInView } from './useInView'\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 1360px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 40px;\n\n  @media (max-width: 960px) {\n    max-height: 360px;\n  }\n\n  @media (max-width: 768px) {\n    max-height: none;\n    padding: 0 48px;\n  }\n  @media (max-width: 468px) {\n    padding: 0 24px;\n  }\n`\nconst SectionLayout = styled(Box)`\n  width: 100%;\n  max-width: 1280px;\n`\nconst HideWhenLarge = styled(Box)`\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\nconst HideWhenSmall = styled(Box)`\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\nconst LeftTop = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 1;\n  grid-row-end: 3;\n`\nconst RightTop = styled.div`\n  grid-column-start: 3;\n  grid-column-end: 5;\n  grid-row-start: 1;\n  grid-row-end: 3;\n`\nconst LeftBottom = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 3;\n  grid-row-end: 5;\n`\nconst RightBottom = styled.div`\n  grid-column-start: 3;\n  grid-column-end: 5;\n  grid-row-start: 3;\n  grid-row-end: 5;\n`\nconst CardLayout = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  grid-column-gap: 16px;\n  grid-row-gap: 16px;\n\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    height: 320px;\n    grid-column-gap: 12px;\n    grid-row-gap: 12px;\n  }\n\n  @media (max-width: 468px) {\n    grid-column-gap: 8px;\n    grid-row-gap: 8px;\n  }\n`\nconst Layout = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 234px);\n  @media (max-width: 960px) {\n    grid-template-rows: repeat(2, 160px);\n  }\n  @media (max-width: 768px) {\n    grid-template-rows: repeat(2, 200px);\n  }\n  grid-column-gap: 24px;\n  grid-row-gap: 16px;\n`\nconst Left = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 1;\n  grid-row-end: 3;\n  height: 100%;\n`\nconst Right = styled.div`\n  grid-column-start: 2;\n  grid-column-end: 3;\n  grid-row-start: 1;\n  grid-row-end: 3;\n  height: 100%;\n`\nconst LearnMoreButton = styled(ExternalLink)`\n  padding: 12px 16px;\n  border-radius: 24px;\n  border: 0;\n  background-color: ${({ theme }) => theme.surface2};\n  font-family: Basel;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 535;\n  line-height: 24px;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`\nconst LearnMoreArrow = styled(ArrowRightCircle)`\n  size: 24px;\n  stroke: ${({ theme }) => theme.surface2};\n  fill: ${({ theme }) => theme.neutral1};\n`\nconst ProtocolDescription = () => (\n  <Trans>\n    Uniswap products are powered by the Uniswap Protocol. The protocol is the largest onchain marketplace, with billions\n    of dollars in weekly volume across thousands of tokens on Ethereum and 7+ additional chains.\n  </Trans>\n)\nfunction LearnMore() {\n  return (\n    <LearnMoreButton href=\"https://info.uniswap.org\">\n      <Row gap=\"sm\" align=\"center\">\n        <Trans>Learn more</Trans>\n        <LearnMoreArrow />\n      </Row>\n    </LearnMoreButton>\n  )\n}\nexport function Stats() {\n  const { ref, inView } = useInView()\n\n  return (\n    <Container>\n      <SectionLayout ref={ref}>\n        <HideWhenSmall>\n          <Layout>\n            <Left>\n              <Box direction=\"column\" justify-content=\"space-between\" height=\"100%\">\n                <H2>\n                  <Trans>Trusted by millions</Trans>\n                </H2>\n                <Box bottom=\"0\" position=\"absolute\" direction=\"column\" maxWidth=\"480px\" gap=\"24px\">\n                  <Body1>\n                    <ProtocolDescription />\n                  </Body1>\n                  <LearnMore />\n                </Box>\n              </Box>\n            </Left>\n            <Right>\n              <Cards inView={inView} />\n            </Right>\n          </Layout>\n        </HideWhenSmall>\n        <HideWhenLarge maxWidth=\"1280px\" direction=\"column\" gap=\"32px\">\n          <H2>\n            <Trans>Trusted by millions</Trans>\n          </H2>\n          <Cards inView={inView} />\n          <Body1>\n            <ProtocolDescription />\n          </Body1>\n          <LearnMore />\n        </HideWhenLarge>\n      </SectionLayout>\n    </Container>\n  )\n}\n\nfunction Cards({ inView }: { inView: boolean }) {\n  const { formatNumber } = useFormatter()\n  const dailyV2VolumeQuery = useDailyProtocolVolumeQuery({\n    variables: {\n      version: ProtocolVersion.V2,\n    },\n  })\n  const dailyV3VolumeQuery = useDailyProtocolVolumeQuery({\n    variables: {\n      version: ProtocolVersion.V3,\n    },\n  })\n  const totalVolume = useMemo(() => {\n    // Second to last data point is most recent 24H period\n    // Last data point is today's volume, which is still accumulating\n    const v2DataPoints = dailyV2VolumeQuery?.data?.historicalProtocolVolume\n    const v2Volume = v2DataPoints && v2DataPoints.length >= 2 ? v2DataPoints[v2DataPoints.length - 2].value : 0\n\n    const v3DataPoints = dailyV3VolumeQuery?.data?.historicalProtocolVolume\n    const v3Volume = v3DataPoints && v3DataPoints.length >= 2 ? v3DataPoints[v3DataPoints.length - 2].value : 0\n\n    return v2Volume + v3Volume\n  }, [dailyV2VolumeQuery?.data?.historicalProtocolVolume, dailyV3VolumeQuery?.data?.historicalProtocolVolume])\n\n  return (\n    <CardLayout>\n      <LeftTop>\n        <StatCard\n          title={t`All time volume`}\n          value={formatNumber({ input: 2 * 10 ** 12, type: NumberType.FiatTokenStats })}\n          delay={0}\n          inView={inView}\n        />\n      </LeftTop>\n      <RightTop>\n        <StatCard\n          title={t`All time swappers`}\n          value={formatNumber({ input: 16.6 * 10 ** 6, type: NumberType.TokenQuantityStats })}\n          delay={0.2}\n          inView={inView}\n        />\n      </RightTop>\n      <LeftBottom>\n        <StatCard\n          title={t`All time LP fees `}\n          value={formatNumber({ input: 3.4 * 10 ** 9, type: NumberType.FiatTokenStats })}\n          delay={0.4}\n          inView={inView}\n        />\n      </LeftBottom>\n      <RightBottom>\n        <StatCard\n          title={t`24H volume`}\n          value={formatNumber({ input: totalVolume || 500000000, type: NumberType.FiatTokenStats })}\n          live\n          delay={0.6}\n          inView={inView}\n        />\n      </RightBottom>\n    </CardLayout>\n  )\n}\n","import { forwardRef } from 'react'\nimport { DirectToDefi } from './sections/DirectToDefi'\nimport { Footer } from './sections/Footer'\nimport { NewsletterEtc } from './sections/NewsletterEtc'\nimport { Stats } from './sections/Stats'\n\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  gap: 120px;\n  @media (max-width: 1024px) {\n    gap: 80px;\n  }\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  z-index: 1;\n`\n\nconst Fold = forwardRef<HTMLDivElement>(function Fold(props, scrollAnchor) {\n  return (\n    <Container>\n      <div ref={scrollAnchor}>\n        <DirectToDefi />\n      </div>\n      <Stats />\n      <NewsletterEtc />\n      <Footer />\n    </Container>\n  )\n})\n\nexport default Fold\n"],"names":["Button","styled","motion","button","theme","surface1","cursor","Slider","div","Label","span","props","color","Opacity","opacity","PillButton","transition","delayChildren","variants","intial","x","hover","icon","label","Box","width","overflow","ArrowRight","size","fill","Container","height","isDarkMode","backgroundColor","dark","light","minHeight","Inner","alignTextToBottom","css","Title","ValuePropCard","textColor","href","to","navigate","useNavigate","initial","whileHover","as","target","rel","onClick","titleText","children","Contents","primary","DocumentationCard","rive","RiveComponent","useRive","src","artboard","stateMachines","layout","Layout","fit","Fit","Contain","alignment","Alignment","CenterRight","isScreenSize","useScreenSize","screenIsLarge","screenIsXLarge","t","CodeBrackets","paddingRight","onMouseEnter","play","DownloadWalletCard","useTheme","useIsDarkMode","lightAnimation","LightAnimation","BottomCenter","darkAnimation","DarkAnimation","accent1","Wallet","LiquidityCard","tagText","Bars","TokenRow","surface2","TokenName","h3","neutral1","breakpoint","xs","TokenTicker","neutral2","TokenPrice","DeltaText","critical","success","DeltaContainer","tokens","chainId","ChainId","MAINNET","address","BASE","USDC_BASE","UNI","LDO","Token","currency","tokenPromoQuery","screenIsSmall","formatFiatPrice","formatDelta","useFormatter","useCurrency","useTokenPromoQuery","variables","wrapped","chain","chainIdToBackendChain","price","data","token","market","value","pricePercentChange","handleClick","useCallback","e","stopPropagation","getTokenDetailsURL","NATIVE_CHAIN_ID","PortfolioLogo","currencies","justify","gap","align","name","symbol","type","NumberType","FiatTokenPrice","DeltaArrow","delta","WebappCard","Computer","map","SectionLayout","RowToCol","SectionCol","DirectToDefi","direction","maxWidth","H2","Trans","Card","a","SquareCard","HelpCenterCard","BlogCard","RectCard","helpPrimary","blogPrimary","NewsletterEtc","justify-content","HelpCircle","H3","BookOpen","accent2","ChatBubbles","Mask","Char","live","red","green","blue","parseToRgb","SpriteContainer","LiveIcon","display","pulsate","keyframes","opacify","numeric","suffixes","delineators","StatCard","Row","title","StringInterpolationWithMotion","prefix","suffix","delay","inView","chars","split","animate","staggerChildren","char","index","charset","includes","NumberSprite","arr","n","indexOf","slice","length","concat","idx","y","duration","charVariants","HideWhenLarge","HideWhenSmall","LeftTop","RightTop","LeftBottom","RightBottom","CardLayout","Left","Right","LearnMoreButton","ExternalLink","ClickableStyle","LearnMoreArrow","ArrowRightCircle","ProtocolDescription","LearnMore","Stats","ref","useRef","setInView","useState","useEffect","io","IntersectionObserver","entries","firstEntry","isIntersecting","threshold","observe","current","disconnect","useInView","bottom","position","Body1","Cards","dailyV2VolumeQuery","dailyV3VolumeQuery","formatNumber","useDailyProtocolVolumeQuery","version","ProtocolVersion","V2","V3","totalVolume","useMemo","v2DataPoints","historicalProtocolVolume","v2Volume","v3DataPoints","input","FiatTokenStats","TokenQuantityStats","forwardRef","scrollAnchor","Footer"],"sourceRoot":""}